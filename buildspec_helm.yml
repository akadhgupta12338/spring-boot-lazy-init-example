version: 0.2


phases:
  pre_build:
    commands:
      - echo Installing helm
      - wget https://get.helm.sh/helm-v3.9.3-linux-amd64.tar.gz
      - tar xvf helm-v3.9.3-linux-amd64.tar.gz
      - sudo mv linux-amd64/helm /usr/local/bin
      - rm helm-v3.4.1-linux-amd64.tar.gz
      - rm -rf linux-amd64
      - helm version
      - echo Installing app dependencies such as kubectl...
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin 
      - kubectl version --short --client      
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=737376305814.dkr.ecr.ap-south-1.amazonaws.com/sample-app
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - echo Logging in to Amazon EKS...
      - aws eks --region ap-south-1 update-kubeconfig --name java-demo      

  build:
    commands:
      - mvn clean install
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"order-service","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
      - sed -i 's@ECR_REPO@'"$REPOSITORY_URI"'@' sample-app/values.yaml
      - sed -i 's@IMAGE_TAG@'"$IMAGE_TAG"'@' sample-app/values.yaml
      - helm upgrade --install demoapp sample-app/


artifacts:
  files:
   - imagedefinitions.json
   - target/order-service.jar
